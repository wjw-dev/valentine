import React, { useState, useEffect } from 'react';
import { States } from './components/Constants';

function App() {
  const [question, setQuestion] = useState("What monument did we have our first kiss under?");
  const [answer, setAnswer] = useState("");
  const [hint, setHint] = useState("It is famous!");
  const [flipped, setFlipped] = useState(false);
  const [showModal, setShowModal] = useState(false);


  const [addressed, setAddressed] = useState("**: **********************")
  const [date, setDate] = useState("****: *********")
  const [time, setTime] = useState("****: *****")
  const [dressCode, setDressCode] = useState("*********: ***********")
  const [transport, setTransport] = useState("*********: ******")
  const [location_long, setLocation_Long] = useState("*************: **********")

  const [showHint, setShowHint] = useState(false);
  const [iter, setIter] = useState(0)

  useEffect(()=>{

    if(iter >= States.length) return;

    setQuestion(States[iter].question)
    setAnswer("")
    setHint(States[iter].hint)



    switch(iter)
    {
      case 1:
        setAddressed("TO: MS. CHEUK KYU SYBIL HO")
        break;
      case 2:
        setDate("DATE: 21/2/2023")
        break;
      case 3:
        setTime("TIME: 19:00")
        break;
      case 4:
        setDressCode("DRESS CODE: SEMI-FORMAL")
        break;
      case 5:
        setTransport("TRANSPORT: PICK-UP")
        break;
      case 6:
        setLocation_Long("LOCATION_LONG: 151.205610")
        break;
    }

  }, [iter])

  useEffect(() => {
    let timeoutId = null;
    if (flipped) {
      timeoutId = setTimeout(() => {
        setFlipped(false);
      }, 500);
    }
    return () => {
      clearTimeout(timeoutId);
    };
  }, [flipped]);

  const handleKeyDown = (e) => {
    if (e.key === 'Enter') {
      setAnswer(e.target.value);
      if (e.target.value !== States[iter].answer) {
        setFlipped(true);
      }
      else
      {
        setIter(iter+1)
        setShowHint(false)
      }
    }
  };

  const handleClick = () => {
    setShowHint(!showHint);
  };

  const handleShowModal = () => {
    setShowModal(true);
  };

  const handleCloseModal = () => {
    setShowModal(false);
  };

  return (
    <div style={{ padding: "10%", display: "flex", flexDirection: "column", alignItems: "center", justifyContent: "center", height: "80vh"}}>
      <h3 className="Question">{question}</h3>
      <div style={{
        transform: flipped ? "rotateY(360deg)" : "rotateY(0deg)",
        transition: "transform 0.5s",
        border: flipped ? "1px solid red" : "none"
      }}>
        <input className="Answer" placeholder="Write your answer" value={answer} onKeyDown={handleKeyDown} onChange={e=>setAnswer(e.target.value)}/>
      </div>

      <div style={{display: "flex"}} onClick={handleClick}>
        <p style={{marginBottom: "10px"}}>hint? </p>
        <p style={{marginTop: "10px"}}>{showHint ? hint : ""}</p>
      </div>

      <button onClick={handleShowModal}>Show Message </button>
      {showModal && (
        <div style={{
          position: "fixed",
          top: "50%",
          left: "50%",
          transform: "translate(-50%, -50%)",
          backgroundColor: "white",
          padding: "2rem",
          borderRadius: "10px",
          border: "2px solid black"
        }}>
          <p style={{ fontWeight: "bold" }}>{addressed}</p>
          <p>{date}</p>
          <p>{time}</p>
          <p>{dressCode}</p>
          <p>{transport}</p>
          <p>{location_long}</p>
          <button onClick={handleCloseModal}> Close </button>
        </div>
      )}
    </div>
  );
}
export default App
